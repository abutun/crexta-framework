/*  * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*	CREXTA - Web Data Extraction Framework  							*
*																		*
*	Copyright (C) 2009-2011  Ahmet BÜTÜN (ahmetbutun@gmail.com)			*
*	http://www.ahmetbutun.net |	http://www.abbsolutions.com				*
*																		*
*	www.me-like.biz														*
*																		*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *  */
using System;
using System.Linq;

namespace Crexta.Common.Constants
{
    public class ServerConstants
    {
        /// <summary>
        /// MAX Idle time of a client
        /// </summary>
        public const int defaultClientMaxIDLETimeInSeconds = 600; // Seconds (10 minutes)

        /// <summary>
        /// Waiting time for the client if they somehow lose connection
        /// </summary>
        public const int defaultClientReConnectTimeSeconds = 0; // Seconds

        /// <summary>
        /// Waiting time for the client if they somehow lose connection
        /// </summary>
        public const int defaultClientReConnectTimeMinutes = 1; // Minutes

        /// <summary>
        /// Shall the server reflect brand prediction generated by server ai
        /// </summary>
        public const bool defaultReflectBrandPrediction = false;

        /// <summary>
        /// Shall the server reflect category prediction generated by server ai
        /// </summary>
        public const bool defaultReflectCategoryPrediction = false;

        /// <summary>
        /// Use U2M.ME service in order to shorten urls
        /// </summary>
        public const bool defaultShortenURLsWithU2M = true;

        /// <summary>
        /// Relationship between UF and DE counts in whole distrubuted system
        /// </summary>
        public const int defaultDataExtractorMultiplier = 3; // UF = 3 * DE (URL Founder Count = Data Extractor Count * 3)

        /// <summary>
        /// URL list count for every DE request
        /// </summary>
        public const int defaultDataExtractorURLSetCount = 50;

        /// <summary>
        /// Data extraction freshness (hour)
        /// </summary>
        public const int defaultCrawlerExtractHourThreshold = 24;

        /// <summary>
        /// Data extraction freshness (minute)
        /// </summary>
        public const int defaultCrawlerExtractMinuteThreshold = 0;

        /// <summary>
        /// Write all events to log files
        /// </summary>
        public const bool defaultLogAllEvents = false;

        public const int defaultDataExtractorUrlRetryCount = 5;

        /// <summary>
        /// Dump XML results to disk
        /// </summary>
        public const bool defaultDumpXMLResult2Disk = false;

        public static string logAllEvents = "SRV_logAllEvents";

        public static string dumpXMLResult2Disk = "SRV_dumpXMLResult2Disk";

        public static string clientMaxIDLETimeInSeconds = "SRV_clientMaxIDLETimeInSeconds";

        public static string reflectBrandPrediction = "SRV_reflectBrandPrediction";

        public static string reflectCategoryPrediction = "SRV_reflectCategoryPrediction";

        public static string shortenURLsWithU2M = "SRV_shortenURLsWithU2M";

        public static string dataExtractorMultiplier = "SRV_dataExtractorMultiplier";

        public static string dataExtractorURLSetCount = "SRV_dataExtractorURLSetCount";

        public static string crawlerExtractHourThreshold = "SRV_crawlerExtractHourThreshold";

        public static string crawlerExtractMinuteThreshold = "SRV_crawlerExtractMinuteThreshold";

        public static string clientReConnectTimeSeconds = "SRV_clientReConnectTimeSeconds";

        public static string clientReConnectTimeMinutes = "SRV_clientReConnectTimeMinutes";

        public static string dataExtractorUrlRetryCount = "SRV_dataExtractorUrlRetryCount";
    }
}
